spring:
  application:
    name: community-service
  config:
    import: optional:file:.env[.properties]
  profiles:
    active: ${SPRING_PROFILES_ACTIVE}
---
spring:
  config:
    activate.on-profile: dev
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jackson:
    time-zone: Asia/Seoul
  jpa:
    hibernate.ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        # 방언 설정보다 db url에 따른 자동 감지를 사용하자
#        dialect: org.hibernate.dialect.PostgreSQLDialect
        highlight_sql: true
logging:
  level:
    org:
      hibernate:
        SQL: debug
        orm.jdbc.bind: trace
      springframework:
        orm.jpa: debug
        web: debug
        transaction: debug
server:
  port: ${PORT:8080}
---
spring:
  config:
    activate.on-profile: prod
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate.ddl-auto: validate
    properties:
      hibernate:

server:
  port: ${PORT:8080}
---
spring:
  config:
    activate.on-profile: test
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:test;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=TRUE;
    username: sa
    password:
  jpa:
    hibernate.ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        highlight_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
logging:
  level:
    org:
      hibernate:
        SQL: debug
        orm.jdbc.bind: trace
      springframework:
        orm.jpa: debug
        web: debug
        transaction: debug
server:
  port: ${PORT:8080}